{"version":3,"sources":["constants/index.ts","utils/functions.ts","components/RangeSlider.tsx","hooks/useDebounce.tsx","context/AbvEquation.tsx","components/Gauge.tsx","components/Calculator.tsx","hooks/useOnClickOutside.tsx","components/Settings.tsx","pages/abv-calculator.tsx"],"names":["HYDROMETER_MAX_VALUE","HYDROMETER_MIN_VALUE","BRIX_MIN_VALUE","BRIX_MAX_VALUE","SG_MIN_VALUE","SG_MAX_VALUE","formatValue","value","fractionDigits","Number","toFixed","calculateAbvStandard","og","fg","calculateAbvAlternate","brixToSG","brix","SGToBrix","sg","RangeSlider","memo","label","min","max","step","onChange","StyledRangeSlider","aria-label","type","styled","fieldset","secondary","primary","useDebounce","delay","React","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","AbvEquationContext","createContext","equation","changeHandler","calculateAbv","useAbvEquationContext","useContext","AbvEquationContextProvider","children","setEquation","abvEquationMode","localStorage","getItem","Provider","setItem","context","id","displayName","Gauge","abv","maxAbv","useMemo","style","height","margin","nrOfLevels","colors","danger","arcWidth","needleColor","needleBaseColor","percent","hideText","Card","div","lightenDark","RangeSliderWrapper","Result","Calculator","setOg","setFg","setAbv","result","debouncedAbv","e","target","useOnClickOutside","ref","callback","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","CheckBox","secondaryLight","StyledSettingsCommon","css","secondaryDark","SettingsDrawerButton","light","StyledSettings","props","showMenu","Settings","wrapperRef","useRef","setShowSettings","showSettings","onClick","checked","htmlFor","AbvCalculator","AbvEquation"],"mappings":"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","file":"static/js/5.4afb9f62.chunk.js","sourcesContent":["export const HYDROMETER_MAX_VALUE = 1.16;\nexport const HYDROMETER_MIN_VALUE = 0.98;\nexport const BRIX_MIN_VALUE = 0;\nexport const BRIX_MAX_VALUE = 40;\nexport const SG_MIN_VALUE = 1;\nexport const SG_MAX_VALUE = 1.179;\n","export function formatValue(value: number, fractionDigits: number = 3) {\n  return Number(value.toFixed(fractionDigits));\n}\n\n// formula source: https://www.brewersfriend.com/2011/06/16/alcohol-by-volume-calculator-updated/\nexport function calculateAbvStandard(og: number, fg: number) {\n  return (og - fg) * 131.25;\n}\n\nexport function calculateAbvAlternate(og: number, fg: number) {\n  return ((76.08 * (og - fg)) / (1.775 - og)) * (fg / 0.794);\n}\n\n// formula source: https://straighttothepint.com/specific-gravity-brix-plato-conversion-calculators/\nexport function brixToSG(brix: number) {\n  return brix / (258.6 - (brix / 258.2) * 227.1) + 1;\n}\n\nexport function SGToBrix(sg: number) {\n  return ((182.4601 * sg - 775.6821) * sg + 1262.7794) * sg - 669.5622;\n}\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { primary, secondary } from '../constants/colors';\n\ntype Props = {\n  label: string;\n  value: number;\n  min: number;\n  max: number;\n  step: number;\n  fractionDigits?: number;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RangeSlider: React.FC<Props> = memo(\n  ({ label, value, min, max, step, fractionDigits = 3, onChange }) => (\n    <StyledRangeSlider>\n      <output>\n        <span>{label}</span>\n        {value.toFixed(fractionDigits)}\n      </output>\n      <input\n        aria-label={label}\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={onChange}\n      />\n    </StyledRangeSlider>\n  ),\n);\n\nconst StyledRangeSlider = styled.fieldset`\n  padding: 12px 0px;\n  border: 0;\n  input {\n    width: 100%;\n    height: 5px;\n    border-radius: 5px;\n    background: ${secondary};\n    outline: none;\n    opacity: 0.7;\n    transition: opacity 0.2s;\n    appearance: none;\n    :hover {\n      opacity: 1;\n    }\n    ::-webkit-slider-thumb {\n      appearance: none;\n      width: 30px;\n      height: 30px;\n      border-radius: 50%;\n      background: ${primary};\n      cursor: pointer;\n    }\n  }\n  output {\n    display: block;\n    color: ${secondary};\n    font-size: 1.4rem;\n    text-align: center;\n    text-transform: uppercase;\n    span {\n      margin-right: 0.4rem;\n      font-size: 1rem;\n    }\n  }\n`;\n\nexport default RangeSlider;\n","import React from 'react';\n\nexport function useDebounce<T = unknown>(value: T, delay: number) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n\n  React.useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay], // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport {\n  calculateAbvAlternate,\n  calculateAbvStandard,\n} from '../utils/functions';\nimport ContextDevTool from 'react-context-devtool';\n\ntype Props = { children: React.ReactNode };\n\ntype EquationMode = 'standard' | 'alternate';\n\ntype ContextProps = {\n  equation: EquationMode;\n  changeHandler: () => void;\n  calculateAbv: (og: number, fg: number) => number;\n};\n\nconst AbvEquationContext = createContext<ContextProps>({\n  equation: 'standard',\n  changeHandler: () => {},\n  calculateAbv: () => 0,\n});\n\nexport const useAbvEquationContext = (): ContextProps =>\n  useContext(AbvEquationContext);\n\nexport const AbvEquationContextProvider = ({ children }: Props) => {\n  const [equation, setEquation] = useState<EquationMode>('standard');\n\n  useEffect(() => {\n    const abvEquationMode = localStorage.getItem(\n      'EquationMode',\n    ) as EquationMode;\n\n    if (abvEquationMode) {\n      setEquation(abvEquationMode);\n    }\n  }, []);\n\n  const changeHandler = () => {\n    if (equation === 'standard') {\n      localStorage.setItem('EquationMode', 'alternate');\n      setEquation('alternate');\n    } else {\n      localStorage.setItem('EquationMode', 'standard');\n      setEquation('standard');\n    }\n  };\n\n  const calculateAbv = (og: number, fg: number) => {\n    if (equation === 'alternate') {\n      return calculateAbvAlternate(og, fg);\n    }\n    return calculateAbvStandard(og, fg);\n  };\n\n  return (\n    <AbvEquationContext.Provider\n      value={{ equation, changeHandler, calculateAbv }}\n    >\n      <ContextDevTool\n        context={AbvEquationContext}\n        id=\"abv-context\"\n        displayName=\"Abv Equation Context\"\n      />\n      {children}\n    </AbvEquationContext.Provider>\n  );\n};\n\nexport default AbvEquationContextProvider;\n","import React, { useMemo, memo } from 'react';\nimport GaugeChart from 'react-gauge-chart';\nimport { HYDROMETER_MAX_VALUE, HYDROMETER_MIN_VALUE } from '../constants';\nimport { danger, primary, secondary } from '../constants/colors';\nimport { useAbvEquationContext } from '../context/AbvEquation';\n\ntype Props = { abv: number };\n\nconst Gauge: React.FC<Props> = memo(({ abv }) => {\n  const { calculateAbv } = useAbvEquationContext();\n\n  const maxAbv = useMemo(\n    () => calculateAbv(HYDROMETER_MAX_VALUE, HYDROMETER_MIN_VALUE),\n    [calculateAbv],\n  );\n\n  return (\n    <GaugeChart\n      id=\"abv-gauge\"\n      style={{ height: '100px', margin: '15px 0' }}\n      nrOfLevels={20}\n      colors={[secondary, danger]}\n      arcWidth={0.2}\n      needleColor={primary}\n      needleBaseColor={primary}\n      percent={abv / maxAbv}\n      hideText={true}\n    />\n  );\n});\n\nexport default Gauge;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { HYDROMETER_MIN_VALUE, HYDROMETER_MAX_VALUE } from '../constants';\nimport { useAbvEquationContext } from '../context/AbvEquation';\nimport { formatValue } from '../utils/functions';\nimport Gauge from './Gauge';\nimport RangeSlider from './RangeSlider';\nimport { lightenDark } from '../constants/colors';\nimport { useDebounce } from '../hooks/useDebounce';\n\nconst Calculator: React.FC = () => {\n  const { calculateAbv } = useAbvEquationContext();\n  const [og, setOg] = React.useState(HYDROMETER_MIN_VALUE);\n  const [fg, setFg] = React.useState(HYDROMETER_MIN_VALUE);\n  const [abv, setAbv] = React.useState(0);\n\n  React.useEffect(() => {\n    const result = formatValue(calculateAbv(og, fg), 2);\n    setAbv(result > 0 ? result : 0);\n  }, [og, fg, calculateAbv]);\n\n  const debouncedAbv = useDebounce(abv, 250);\n\n  return (\n    <>\n      <Gauge abv={debouncedAbv} />\n      <Result>\n        <span>ABV</span>\n        {debouncedAbv}%\n      </Result>\n      <Card>\n        <RangeSliderWrapper>\n          <RangeSlider\n            label=\"og\"\n            value={og}\n            min={HYDROMETER_MIN_VALUE}\n            max={HYDROMETER_MAX_VALUE}\n            step={0.001}\n            onChange={e => setOg(formatValue(Number(e.target.value)))}\n          />\n          <RangeSlider\n            label=\"fg\"\n            value={fg}\n            min={HYDROMETER_MIN_VALUE}\n            max={HYDROMETER_MAX_VALUE}\n            step={0.001}\n            onChange={e => setFg(formatValue(Number(e.target.value)))}\n          />\n        </RangeSliderWrapper>\n      </Card>\n    </>\n  );\n};\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  width: 90%;\n  background-color: ${lightenDark};\n  margin-top: 10px;\n  padding: 10px;\n  border-radius: 3px;\n  padding: 20px;\n`;\n\nconst RangeSliderWrapper = styled.div`\n  width: 100%;\n  max-width: 350px;\n`;\n\nconst Result = styled.div`\n  font-size: 3.75rem;\n  margin: 15px 0;\n  span {\n    margin-right: 0.7rem;\n    font-size: 2.5rem;\n  }\n`;\n\nexport default Calculator;\n","import React, { useEffect } from 'react';\n\n/**\n * Hook that executes a callback on click outside of the passed ref\n */\nconst useOnClickOutside = <T extends HTMLElement>(\n  ref: React.RefObject<T>,\n  callback: () => void,\n) => {\n  useEffect(() => {\n    /**\n     * Execute callback\n     */\n    function handleClickOutside(event: MouseEvent) {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        callback();\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref, callback]);\n};\n\nexport default useOnClickOutside;\n","import React, { useRef, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  light,\n  secondary,\n  secondaryDark,\n  secondaryLight,\n} from '../constants/colors';\nimport { useAbvEquationContext } from '../context/AbvEquation';\nimport useOnClickOutside from '../hooks/useOnClickOutside';\n\nconst Settings: React.FC = () => {\n  const wrapperRef = useRef(null);\n\n  const { equation, changeHandler } = useAbvEquationContext();\n  useOnClickOutside(wrapperRef, () => setShowSettings(false));\n\n  const [showSettings, setShowSettings] = useState(false);\n\n  return (\n    <div ref={wrapperRef}>\n      <SettingsDrawerButton onClick={() => setShowSettings(true)}>\n        Σ\n      </SettingsDrawerButton>\n      <StyledSettings showMenu={showSettings}>\n        <h5>Equation</h5>\n        <CheckBox>\n          <input\n            id=\"standard\"\n            type=\"checkbox\"\n            checked={equation === 'standard'}\n            onChange={changeHandler}\n          />\n          <span></span>\n          <label htmlFor=\"standard\">Standard</label>\n        </CheckBox>\n        <CheckBox>\n          <input\n            id=\"alternate\"\n            type=\"checkbox\"\n            checked={equation === 'alternate'}\n            onChange={changeHandler}\n          />\n          <span></span>\n          <label htmlFor=\"alternate\">Alternate</label>\n        </CheckBox>\n      </StyledSettings>\n    </div>\n  );\n};\n\nconst CheckBox = styled.div`\n  margin: 25px 0;\n  display: flex;\n  align-items: center;\n  user-select: none;\n\n  label {\n    font-size: 1.2rem;\n    position: absolute;\n    padding-left: 30px;\n    cursor: pointer;\n  }\n\n  input {\n    opacity: 0;\n    visibility: hidden;\n    position: absolute;\n\n    &:checked {\n      ~ span {\n        border-color: ${secondaryLight};\n        box-shadow: 0px 0px 0px 5px ${secondaryLight} inset;\n\n        &::after {\n          opacity: 1;\n          transform: scale(1);\n        }\n      }\n    }\n  }\n\n  span {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    border: 2px solid ${secondaryLight};\n    box-shadow: 0px 0px 0px 0px ${secondaryLight} inset;\n    transition: all 0.15s cubic-bezier(0, 1.05, 0.72, 1.07);\n  }\n`;\n\nconst StyledSettingsCommon = css`\n  position: fixed;\n  top: calc(80vh / 5);\n  left: 0;\n  background-color: ${secondaryDark};\n  border: 1px solid ${secondary};\n  border-left: none;\n  border-radius: 0 3px 3px 0;\n`;\n\nconst SettingsDrawerButton = styled.div`\n  ${StyledSettingsCommon};\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  color: ${light};\n  font-size: 1.8rem;\n  font-family: 'Roboto', sans-serif;\n  cursor: pointer;\n`;\n\nconst StyledSettings = styled.div<{ showMenu: boolean }>`\n  ${StyledSettingsCommon};\n  transform: ${props =>\n    props.showMenu ? 'translateX(0)' : 'translateX(-100%)'};\n  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  padding: 15px 25px;\n  h5 {\n    font-size: 1.8rem;\n    text-align: center;\n  }\n`;\nexport default Settings;\n","import React from 'react';\nimport Calculator from '../components/Calculator';\nimport Settings from '../components/Settings';\nimport AbvEquationContextProvider from '../context/AbvEquation';\nimport { Title } from './Styles';\n\nconst AbvCalculator: React.FC = () => {\n  return (\n    <>\n      <Title>ABV Calculator</Title>\n      <AbvEquationContextProvider>\n        <Calculator />\n        <Settings />\n      </AbvEquationContextProvider>\n    </>\n  );\n};\n\nexport default AbvCalculator;\n"],"sourceRoot":""}